name: Laravel Deploy to AWS Lightsail

on:
  push:
    branches: [ main ]  # Adapte selon ta branche principale

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, zip, pdo_mysql, curl, bcmath, xml, intl, soap
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install PHP dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build frontend (Tailwind etc.)
        run: npm run build

      - name: Laravel cache
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      - name: Create build archive
        run: |
          mkdir -p tmp
          mkdir -p tmp/package

# Copie tout sauf les exclusions vers tmp/package
          rsync -a . tmp/package --exclude=deploy --exclude=.git --exclude=node_modules --exclude=tests --exclude=.github

  # Crée l'archive à l'extérieur du dossier copié
          tar -czf deploy/app.tar.gz -C tmp/package .

  # Nettoie le temporaire
          rm -rf tmp

      - name: Upload to Lightsail via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "deploy/app.tar.gz"
          target: "~/"

      - name: SSH into Lightsail and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            mkdir -p ${{ secrets.DEPLOY_PATH }}
            rm -rf ${{ secrets.DEPLOY_PATH }}/*
            tar -xzf ~/app.tar.gz -C ${{ secrets.DEPLOY_PATH }}
            cd ${{ secrets.DEPLOY_PATH }}
            cp .env.production .env
            php artisan config:clear
            php artisan migrate --force
            chown -R www-data:www-data .
            chmod -R 775 storage bootstrap/cache
